{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Motorista() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      lista = _useState2[0],\n      setLista = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      busca = _useState4[0],\n      setBusca = _useState4[1];\n\n  var carregaLista = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var uriMotGet = 'http://localhost:3000/motoristas';\n        fetch(uriMotGet, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          if (data !== null) setLista([data]);\n          console.log(setLista());\n        }).catch(function (error) {\n          console.error(error);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    });\n\n    return function carregaLista() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (lista.length === 0) carregaLista();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(val) {\n        setBusca(val);\n      },\n      placeholder: \"Digite para buscar...\",\n      placeholderTextColor: \"#00000077\"\n    }), _jsx(ScrollView, {\n      children: _jsx(View, {\n        style: styles.lista,\n        children: lista.map(function (item, index) {\n          if (item.pet.includes(busca) || item.medico.includes(busca) || item.vacina.includes(busca) || item.data.includes(busca)) return _jsxs(View, {\n            style: styles.item,\n            children: [_jsxs(Text, {\n              style: styles.text,\n              children: [\"ID : \", item.pet]\n            }), _jsxs(Text, {\n              style: styles.text,\n              children: [\"NOME : \", item.medico]\n            }), _jsxs(Text, {\n              style: styles.text,\n              children: [\"CNH : \", item.vacina]\n            }), _jsxs(Text, {\n              style: styles.text,\n              children: [\"CPF : \", item.data]\n            }), _jsxs(Text, {\n              style: styles.text,\n              children: [\"STATUS : \", item.data]\n            })]\n          }, index);\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#505050',\n    alignItems: 'center'\n  },\n  input: {\n    width: '90%',\n    paddingHorizontal: '12px',\n    paddingVertical: '12px',\n    backgroundColor: '#EFEFEF',\n    outlineStyle: 'none',\n    border: 'none',\n    borderRadius: '5px',\n    marginVertical: '10px',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 6\n    },\n    shadowOpacity: 0.58,\n    shadowRadius: 20.00,\n    elevation: 16\n  },\n  lista: {\n    width: '100vw',\n    alignItems: 'center'\n  },\n  item: {\n    width: '90%',\n    marginVertical: '5px',\n    borderRadius: '5px',\n    borderRadius: '5px',\n    marginBottom: '10px',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 6\n    },\n    shadowOpacity: 0.58,\n    shadowRadius: 20.00,\n    elevation: 16,\n    padding: 15\n  },\n  linha: {\n    width: '100%',\n    height: '1px',\n    backgroundColor: '#8a66fa',\n    marginTop: '15px'\n  },\n  text: {\n    color: '#EFEFEF'\n  }\n});","map":{"version":3,"names":["useState","Motorista","lista","setLista","busca","setBusca","carregaLista","uriMotGet","fetch","method","headers","then","response","json","data","console","log","catch","error","e","length","styles","container","input","val","map","item","index","pet","includes","medico","vacina","text","StyleSheet","create","flex","backgroundColor","alignItems","width","paddingHorizontal","paddingVertical","outlineStyle","border","borderRadius","marginVertical","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","marginBottom","padding","linha","marginTop","color"],"sources":["C:/Users/Desenvolvimento/Desktop/GITHUB/opa/SENAI2023/projetos/preProjetoRenas/mobile/src/screens/motorista.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { View, Text, StyleSheet, TextInput, ScrollView } from 'react-native';\r\n\r\nexport default function Motorista() {\r\n    const [lista, setLista] = useState([]);\r\n    const [busca, setBusca] = useState(\"\");\r\n\r\n    const carregaLista = async () => {\r\n        try {\r\n            \r\n            const uriMotGet = 'http://localhost:3000/motoristas';\r\n      \r\n        fetch(uriMotGet, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            if (data !== null) setLista([data]);\r\n            console.log(setLista());\r\n\r\n            \r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n          \r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    if (lista.length === 0) carregaLista();\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <TextInput style={styles.input} onChangeText={(val) => { setBusca(val) }} placeholder=\"Digite para buscar...\" placeholderTextColor={\"#00000077\"} />\r\n            <ScrollView>\r\n                <View style={styles.lista}>\r\n                    {\r\n                        lista.map((item, index) => {\r\n                            if (item.pet.includes(busca) || item.medico.includes(busca) || item.vacina.includes(busca) || item.data.includes(busca))\r\n                                return (\r\n                                    <View style={styles.item} key={index}>\r\n                                        <Text style={styles.text}>ID : {item.pet}</Text>\r\n                                        <Text style={styles.text}>NOME : {item.medico}</Text>\r\n                                        <Text style={styles.text}>CNH : {item.vacina}</Text>\r\n                                        <Text style={styles.text}>CPF : {item.data}</Text>\r\n                                        <Text style={styles.text}>STATUS : {item.data}</Text>\r\n\r\n                                    </View>\r\n                                )\r\n                        })\r\n                    }\r\n                </View>\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#505050',\r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        width: '90%',\r\n        paddingHorizontal: '12px',\r\n        paddingVertical: '12px',\r\n        backgroundColor: '#EFEFEF',\r\n        outlineStyle: 'none',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        marginVertical: '10px',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 6,\r\n        },\r\n        shadowOpacity: 0.58,\r\n        shadowRadius: 20.00,\r\n        elevation: 16,\r\n    },\r\n    lista: {\r\n        width: '100vw',\r\n        alignItems: 'center'\r\n    },\r\n    item: {\r\n        width: '90%',\r\n        marginVertical: '5px',\r\n        borderRadius: '5px',\r\n        borderRadius: '5px',\r\n        marginBottom: '10px',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 6,\r\n        },\r\n        shadowOpacity: 0.58,\r\n        shadowRadius: 20.00,\r\n        elevation: 16,\r\n        padding: 15,\r\n    },\r\n    linha: {\r\n        width: '100%',\r\n        height: '1px',\r\n        backgroundColor: '#8a66fa',\r\n        marginTop: '15px',\r\n    },\r\n    text: {\r\n        color: '#EFEFEF',\r\n    }\r\n});"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;;;;;AAGA,eAAe,SAASC,SAAT,GAAqB;EAChC,gBAA0BD,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOE,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAA0BH,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOI,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,YAAY;IAAA,6BAAG,aAAY;MAC7B,IAAI;QAEA,IAAMC,SAAS,GAAG,kCAAlB;QAEJC,KAAK,CAACD,SAAD,EAAY;UACfE,MAAM,EAAE,KADO;UAEfC,OAAO,EAAE;YACP,gBAAgB;UADT;QAFM,CAAZ,CAAL,CAMGC,IANH,CAMQ,UAACC,QAAD;UAAA,OAAcA,QAAQ,CAACC,IAAT,EAAd;QAAA,CANR,EAOGF,IAPH,CAOQ,UAACG,IAAD,EAAU;UACd,IAAIA,IAAI,KAAK,IAAb,EAAmBX,QAAQ,CAAC,CAACW,IAAD,CAAD,CAAR;UACnBC,OAAO,CAACC,GAAR,CAAYb,QAAQ,EAApB;QAGD,CAZH,EAaGc,KAbH,CAaS,UAACC,KAAD,EAAW;UAChBH,OAAO,CAACG,KAAR,CAAcA,KAAd;QACD,CAfH;MAiBC,CArBD,CAqBE,OAAOC,CAAP,EAAU;QACRJ,OAAO,CAACC,GAAR,CAAYG,CAAZ;MACH;IACJ,CAzBiB;;IAAA,gBAAZb,YAAY;MAAA;IAAA;EAAA,GAAlB;;EA2BA,IAAIJ,KAAK,CAACkB,MAAN,KAAiB,CAArB,EAAwBd,YAAY;EAEpC,OACI,MAAC,IAAD;IAAM,KAAK,EAAEe,MAAM,CAACC,SAApB;IAAA,WACI,KAAC,SAAD;MAAW,KAAK,EAAED,MAAM,CAACE,KAAzB;MAAgC,YAAY,EAAE,sBAACC,GAAD,EAAS;QAAEnB,QAAQ,CAACmB,GAAD,CAAR;MAAe,CAAxE;MAA0E,WAAW,EAAC,uBAAtF;MAA8G,oBAAoB,EAAE;IAApI,EADJ,EAEI,KAAC,UAAD;MAAA,UACI,KAAC,IAAD;QAAM,KAAK,EAAEH,MAAM,CAACnB,KAApB;QAAA,UAEQA,KAAK,CAACuB,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP,EAAiB;UACvB,IAAID,IAAI,CAACE,GAAL,CAASC,QAAT,CAAkBzB,KAAlB,KAA4BsB,IAAI,CAACI,MAAL,CAAYD,QAAZ,CAAqBzB,KAArB,CAA5B,IAA2DsB,IAAI,CAACK,MAAL,CAAYF,QAAZ,CAAqBzB,KAArB,CAA3D,IAA0FsB,IAAI,CAACZ,IAAL,CAAUe,QAAV,CAAmBzB,KAAnB,CAA9F,EACI,OACI,MAAC,IAAD;YAAM,KAAK,EAAEiB,MAAM,CAACK,IAApB;YAAA,WACI,MAAC,IAAD;cAAM,KAAK,EAAEL,MAAM,CAACW,IAApB;cAAA,oBAAgCN,IAAI,CAACE,GAArC;YAAA,EADJ,EAEI,MAAC,IAAD;cAAM,KAAK,EAAEP,MAAM,CAACW,IAApB;cAAA,sBAAkCN,IAAI,CAACI,MAAvC;YAAA,EAFJ,EAGI,MAAC,IAAD;cAAM,KAAK,EAAET,MAAM,CAACW,IAApB;cAAA,qBAAiCN,IAAI,CAACK,MAAtC;YAAA,EAHJ,EAII,MAAC,IAAD;cAAM,KAAK,EAAEV,MAAM,CAACW,IAApB;cAAA,qBAAiCN,IAAI,CAACZ,IAAtC;YAAA,EAJJ,EAKI,MAAC,IAAD;cAAM,KAAK,EAAEO,MAAM,CAACW,IAApB;cAAA,wBAAoCN,IAAI,CAACZ,IAAzC;YAAA,EALJ;UAAA,GAA+Ba,KAA/B,CADJ;QAUP,CAZD;MAFR;IADJ,EAFJ;EAAA,EADJ;AAwBH;AAED,IAAMN,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;EAC7BZ,SAAS,EAAE;IACPa,IAAI,EAAE,CADC;IAEPC,eAAe,EAAE,SAFV;IAGPC,UAAU,EAAE;EAHL,CADkB;EAM7Bd,KAAK,EAAE;IACHe,KAAK,EAAE,KADJ;IAEHC,iBAAiB,EAAE,MAFhB;IAGHC,eAAe,EAAE,MAHd;IAIHJ,eAAe,EAAE,SAJd;IAKHK,YAAY,EAAE,MALX;IAMHC,MAAM,EAAE,MANL;IAOHC,YAAY,EAAE,KAPX;IAQHC,cAAc,EAAE,MARb;IASHC,WAAW,EAAE,MATV;IAUHC,YAAY,EAAE;MACVR,KAAK,EAAE,CADG;MAEVS,MAAM,EAAE;IAFE,CAVX;IAcHC,aAAa,EAAE,IAdZ;IAeHC,YAAY,EAAE,KAfX;IAgBHC,SAAS,EAAE;EAhBR,CANsB;EAwB7BhD,KAAK,EAAE;IACHoC,KAAK,EAAE,OADJ;IAEHD,UAAU,EAAE;EAFT,CAxBsB;EA4B7BX,IAAI,EAAE;IACFY,KAAK,EAAE,KADL;IAEFM,cAAc,EAAE,KAFd;IAGFD,YAAY,EAAE,KAHZ;IAIFA,YAAY,EAAE,KAJZ;IAKFQ,YAAY,EAAE,MALZ;IAMFN,WAAW,EAAE,MANX;IAOFC,YAAY,EAAE;MACVR,KAAK,EAAE,CADG;MAEVS,MAAM,EAAE;IAFE,CAPZ;IAWFC,aAAa,EAAE,IAXb;IAYFC,YAAY,EAAE,KAZZ;IAaFC,SAAS,EAAE,EAbT;IAcFE,OAAO,EAAE;EAdP,CA5BuB;EA4C7BC,KAAK,EAAE;IACHf,KAAK,EAAE,MADJ;IAEHS,MAAM,EAAE,KAFL;IAGHX,eAAe,EAAE,SAHd;IAIHkB,SAAS,EAAE;EAJR,CA5CsB;EAkD7BtB,IAAI,EAAE;IACFuB,KAAK,EAAE;EADL;AAlDuB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}